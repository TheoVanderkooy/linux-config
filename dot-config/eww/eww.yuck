

;; bottom bar
(defwidget bar []
  (centerbox :orientation "h"
    (workspaces)
    (window_w)
    (sidestuff)))


;; workspaces list
(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")
(defwidget workspaces []
  (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
    (box :space-evenly true
         :halign "start"
         :spacing 0
      (label :text "${workspaces}${current_workspace}" :visible false)
      (for workspace in workspaces
        ;; note: css selectors don't seem to work well for box/button, use eventbox wrapper to capture the events
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
                  :class "workspace-eventbox"
          (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
            (label :text "${workspace.id}")
            )
          )
        )
      )
    )
  )


;; active window title
(deflisten window :initial "..." "sh ~/.config/eww/scripts/get-window-title")
(defwidget window_w []
  (box
    (label :text "${window}")
    )
  )


;; right side of the bar
(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (metric :label volume_status
            :value volume_percent
            :onchange "amixer sset Master {}%")
;; TODO click volume thing to open thingy... and/or mute
;; TODO swap back to percentages?
    (metric :label battery_status
            :value battery_percent
            :onchange "")
;; TODO wifi widget?
    time))


;; define generic metrics
(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))


;; define various metrics for right side
(defpoll volume_percent :interval "0.1s"
  "scripts/getvol")
(defpoll volume_status :interval "0.1s"
  "scripts/getvolstat")
(defpoll time :interval "1s"
  "date '+%H:%M %b %d, %Y'")
(defpoll battery_percent :interval "5s"
  "scripts/getbat")
(defpoll battery_status :interval "5s"
  "scripts/getbatstat")


;; declare the bar
(defwindow bar
  :monitor 0
  :exclusive true
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "24px"
                      :anchor "bottom center")
  (bar))
